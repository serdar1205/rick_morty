name: Auto Tag and Release

on:
  push:
    branches:
      - main
      - hotfix

permissions:
  contents: write  # allow pushing tags and creating releases

jobs:
  auto-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump Version
        id: bump
        run: |
          tag="${{ steps.get_tag.outputs.tag }}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "${tag#v}"
          
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            ((MINOR+=1))
            PATCH=0
          else
            ((PATCH+=1))
          fi
          
          new_tag="v$MAJOR.$MINOR.$PATCH"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_exists
        run: |
          if git rev-parse ${{ steps.bump.outputs.new_tag }} >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git Tag and Push
        if: steps.tag_exists.outputs.exists == 'false'
        run: |
          git tag ${{ steps.bump.outputs.new_tag }}
          git push origin ${{ steps.bump.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: Release ${{ steps.bump.outputs.new_tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
